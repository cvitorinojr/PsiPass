// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CRP")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserSpecialtyId")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CRP")
                        .IsUnique();

                    b.HasIndex("UserSpecialtyId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.User.UserSpecialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserSpecialty", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2022, 5, 24, 15, 21, 9, 628, DateTimeKind.Local).AddTicks(8274),
                            Description = "Educacional"
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2022, 5, 24, 15, 21, 9, 628, DateTimeKind.Local).AddTicks(8276),
                            Description = "Jurídica"
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(2022, 5, 24, 15, 21, 9, 628, DateTimeKind.Local).AddTicks(8277),
                            Description = "Esportiva"
                        },
                        new
                        {
                            Id = 4,
                            CreateAt = new DateTime(2022, 5, 24, 15, 21, 9, 628, DateTimeKind.Local).AddTicks(8279),
                            Description = "Hospitalar"
                        },
                        new
                        {
                            Id = 5,
                            CreateAt = new DateTime(2022, 5, 24, 15, 21, 9, 628, DateTimeKind.Local).AddTicks(8280),
                            Description = "Social"
                        },
                        new
                        {
                            Id = 6,
                            CreateAt = new DateTime(2022, 5, 24, 15, 21, 9, 628, DateTimeKind.Local).AddTicks(8282),
                            Description = "Neuropsicologia"
                        },
                        new
                        {
                            Id = 7,
                            CreateAt = new DateTime(2022, 5, 24, 15, 21, 9, 628, DateTimeKind.Local).AddTicks(8284),
                            Description = "Clínica"
                        },
                        new
                        {
                            Id = 8,
                            CreateAt = new DateTime(2022, 5, 24, 15, 21, 9, 628, DateTimeKind.Local).AddTicks(8285),
                            Description = "Idoso"
                        },
                        new
                        {
                            Id = 9,
                            CreateAt = new DateTime(2022, 5, 24, 15, 21, 9, 628, DateTimeKind.Local).AddTicks(8287),
                            Description = "Trânsito"
                        },
                        new
                        {
                            Id = 10,
                            CreateAt = new DateTime(2022, 5, 24, 15, 21, 9, 628, DateTimeKind.Local).AddTicks(8288),
                            Description = "Comportamental"
                        },
                        new
                        {
                            Id = 11,
                            CreateAt = new DateTime(2022, 5, 24, 15, 21, 9, 628, DateTimeKind.Local).AddTicks(8290),
                            Description = "Psicopedagogia"
                        },
                        new
                        {
                            Id = 12,
                            CreateAt = new DateTime(2022, 5, 24, 15, 21, 9, 628, DateTimeKind.Local).AddTicks(8291),
                            Description = "Avaliação Psicológica"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2022, 5, 24, 15, 21, 9, 628, DateTimeKind.Local).AddTicks(8047),
                            Description = "Paciente"
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2022, 5, 24, 15, 21, 9, 628, DateTimeKind.Local).AddTicks(8049),
                            Description = "Profissional"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User.User", b =>
                {
                    b.HasOne("Domain.Entities.User.UserSpecialty", "UserSpecialty")
                        .WithMany()
                        .HasForeignKey("UserSpecialtyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserSpecialty");

                    b.Navigation("UserType");
                });
#pragma warning restore 612, 618
        }
    }
}
